#!/usr/bin/env bash

function flower() {
	open $(get_url "flower")
}

function drone() {
	open $(get_url "drone")
}

function grafana(){
	open $(get_url "grafana")
}

function monitor(){
	flower
	grafana
	drone
}

function versions(){

	local -A versions

	just=$(just --version)
	docker=$(docker -v)
	terraform=$(terraform -v)
	pip=$(pip -V)
	pip3=$(pip3 -V)

	IFS='/n' read -r -a terraform_array <<< "$terraform"
	IFS=' ' read -r -a pip_array <<< "$pip"
	read -r -a pip3_array <<< "$pip3"
	unset IFS


	versions["bash"]=$BASH_VERSION
	versions["docker"]=${docker/Docker version /}
	versions["just"]=${just/, version/}
	versions["pip"]=${pip_array[1]}
	versions["pip3"]=${pip3_array[1]}
	versions["python"]=$(python -c 'import sys; print(".".join(map(str, sys.version_info[:3])))')
	versions["python3"]=$(python3 -c 'import sys; print(".".join(map(str, sys.version_info[:3])))')
	versions["terraform"]=${terraform_array[0]/Terraform /}

	for key in ${!versions[@]}
	do
    echo "$key, ${versions[$key]}"
	done
}


function urls(){

	declare -A url_array

	url_array["flower"]="http://flower.shared.tools.clusterone.com"
	url_array["drone"]="http://drone.shared.tools.clusterone.com"
	url_array["grafana"]="http://grafana.shared.tools.clusterone.com"

	for key in ${!url_array[@]}
	do
		if [ "$key" != "0" ]; then
			echo "$key, ${url_array[$key]}"
		fi
	done

}

function get_url(){
	echo ${url_array[$1]}
}
